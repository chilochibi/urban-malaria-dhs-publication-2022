rm(list=ls())
memory.limit(size = 50000)
## -----------------------------------------
### Paths
## -----------------------------------------
user <- Sys.getenv("USERNAME")
Drive <- file.path(gsub("[\\]", "/", gsub("Documents", "", Sys.getenv("HOME"))))
NuDir <- file.path(Drive, "Box", "NU-malaria-team")
ProjectDir <- file.path(NuDir, "data", 'nigeria_dhs' , 'data_analysis')
DataDir <- file.path(ProjectDir, 'data')
ResultDir =file.path(ProjectDir, "results", "research_plots")
GlobDir <- file.path(DataDir, 'africa_health_district_climate', 'climate', 'global')
DHSData <- file.path(DataDir, 'DHS')
RastDir <- file.path(DataDir, "Raster_files")
DataIn <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'DHS_survey_extract')
GeoDir <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'geospatial_covariates')
# -----------------------------------------
### Required functions and settings
## -----------------------------------------
source("00_data_extraction/data_extractor_functions/data_extractor_functions.R")
options(survey.lonely.psu="adjust") # this option allows admin units with only one cluster to be analyzed
dhs_hh <- read.files(DataDir, "*NGPR.*\\.DTA", 'NGPR7AFL|NGPR71FL|NGPR61FL', read_dta)  #reads in the PR files
dhs_hh <- dhs_hh %>% map(~filter(., hv025 == 1)) %>%  map(~dplyr::select(., hv001, hv006, hv007)) %>%  map(~distinct(.,))
dhs_2010 <- left_join(st_as_sf(dhs[[1]]), dhs_hh[[1]], by = c("DHSCLUST"="hv001")) %>%
group_split(hv006)
for(i in seq_along(dhs_2010)) {names(dhs_2010)[[i]] <- paste0(unique(dhs_2010[[i]]$hv006), '_', unique(dhs_2010[[i]]$hv007))}
dhs_2015 <- left_join(st_as_sf(dhs[[2]]), dhs_hh[[2]], by = c("DHSCLUST"="hv001")) %>%
group_split(hv006)
for(i in seq_along(dhs_2015)) {names(dhs_2015)[[i]] <- paste0(unique(dhs_2015[[i]]$hv006), '_', unique(dhs_2015[[i]]$hv007))}
dhs_2018 <- left_join(st_as_sf(dhs[[3]]), dhs_hh[[3]], by = c("DHSCLUST"="hv001")) %>%
group_split(hv006)
for(i in seq_along(dhs_2018)) {names(dhs_2018)[[i]] <- paste0(unique(dhs_2018[[i]]$hv006), '_', unique(dhs_2018[[i]]$hv007))}
dhs <- sapply(c(dhs_2010, dhs_2015, dhs_2018), sf:::as_Spatial, simplify = F)
names(dhs)
dhs <- read.files(DHSData, "*FL.shp$", 'NGGE61FL|NGGE71FL|NGGE7BFL', shapefile) #read in DHS clusters
dhs <- map(dhs, st_as_sf) %>%  map(~filter(.x, URBAN_RURA == "U")) %>% map(sf:::as_Spatial)
dhs_hh <- read.files(DataDir, "*NGPR.*\\.DTA", 'NGPR7AFL|NGPR71FL|NGPR61FL', read_dta)  #reads in the PR files
dhs_hh <- dhs_hh %>% map(~filter(., hv025 == 1)) %>%  map(~dplyr::select(., hv001, hv006, hv007)) %>%  map(~distinct(.,))
dhs_2010 <- left_join(st_as_sf(dhs[[1]]), dhs_hh[[1]], by = c("DHSCLUST"="hv001")) %>%
group_split(hv006)
for(i in seq_along(dhs_2010)) {names(dhs_2010)[[i]] <- paste0(unique(dhs_2010[[i]]$hv006), '_', unique(dhs_2010[[i]]$hv007))}
dhs_2015 <- left_join(st_as_sf(dhs[[2]]), dhs_hh[[2]], by = c("DHSCLUST"="hv001")) %>%
group_split(hv006)
for(i in seq_along(dhs_2015)) {names(dhs_2015)[[i]] <- paste0(unique(dhs_2015[[i]]$hv006), '_', unique(dhs_2015[[i]]$hv007))}
dhs_2018 <- left_join(st_as_sf(dhs[[3]]), dhs_hh[[3]], by = c("DHSCLUST"="hv001")) %>%
group_split(hv006)
for(i in seq_along(dhs_2018)) {names(dhs_2018)[[i]] <- paste0(unique(dhs_2018[[i]]$hv006), '_', unique(dhs_2018[[i]]$hv007))}
dhs <- sapply(c(dhs_2010, dhs_2015, dhs_2018), sf:::as_Spatial, simplify = F)
names(dhs)
View(dhs_2010)
View(dhs_2015)
View(dhs_2018)
View(dhs_2018)
rm(list=ls())
#memory.limit(size = 50000)
# ----------------------------------------------------
### Directories
# ----------------------------------------------------
user = Sys.getenv("USERNAME")
Drive = file.path(gsub("[\\]", "/", gsub("Documents", "", Sys.getenv("HOME"))))
NuDir = file.path(Drive, "Box", "NU-malaria-team")
ProjectDir = file.path(NuDir, 'data', 'nigeria_dhs' , 'data_analysis')
DataDir = file.path(ProjectDir, "data")
DHSData = file.path(DataDir, 'DHS')
DataIn = file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'DHS_survey_extract')
ResultDir =file.path(ProjectDir, "results", "research_plots")
HisDir =file.path(ResultDir, "histograms")
MapsDir = file.path(ResultDir, "maps")
GeoDir <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'geospatial_covariates')
CsvDir = file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'cleaned_cluster_covariates_all', 'New_082321')
# ----------------------------------------------------
### Required functions and settings
## ----------------------------------------------------
source("./other_functions/descriptive_analysis_functions.R")
dhs = read.csv(file.path(CsvDir, "all_DHS_variables_urban_malaria.csv"), header = T, sep = ',') %>% dplyr::select(-X)
#read in geospatial dataset and create final data
files = list.files(path = CsvDir, pattern = '.csv', full.names = TRUE, recursive = FALSE)
files = files[-grep('all_DHS_variables_urban|2018_mobility_DHS_variables_urban_malaria', files)]
df_geo = sapply(files, read.csv, simplify = F)
#find the number of NAs per column in geospatial data
df_nas = df_geo %>%  map(~summarise_all(., funs(sum(is.na(.)))))
names(df_nas[[1]])<- gsub(pattern = '\\_0m$', replacement = '_nas', x = names(df_nas[[1]]))#remove _0m from the 0m buffer dataset
for(i in seq_along(df_nas)){
names(df_nas[[i]])<- names(df_nas[[1]])
}
df_nas = bind_rows(df_nas, .id ='column label')
#count the number of negatives per column in geospatial data
df_neg = df_geo %>%  map(~summarise_all(., funs(sum((.) < 0, na.rm=TRUE))))
names(df_neg[[1]])<- gsub(pattern = '\\_0m$', replacement = '_negs', x = names(df_neg[[1]]))#remove _0m from the 0m buffer dataset
for(i in seq_along(df_neg)){
names(df_neg[[i]])<- names(df_neg[[1]])
}
df_neg = bind_rows(df_neg, .id ='column label')
df_na_neg = cbind(df_nas, df_neg)
df_na_neg = df_na_neg[,order(colnames(df_na_neg))]
df_na_neg
#select geospatial dataset values with fewest
df_sp = data.frame(v001 = df_geo[[1]]$v001, dhs_year = df_geo[[1]]$dhs_year, elevation_1000m = df_geo[[2]]$elev_merit_1000m,
housing_2000_4000m = df_geo[[5]]$housing_2000_4000m,  housing_2015_4000m = df_geo[[5]]$housing_2015_4000m,
minutes_nearest_city_1000m = df_geo[[2]]$minutes_to_city_1000m, minutes_travel_metre_2015_1000m = df_geo[[2]]$minutes_travel_metre_2015_1000m,
minutes_travel_metre_2019_2000m = df_geo[[3]]$minutes_travel_metre_2019_2000m, minutes_walking_healthcare_2000m = df_geo[[3]]$minutes_walking_healthcare_2000m,
minutes_walking_metre_2000m = df_geo[[3]]$minutes_walking_metre_2000m, motorized_travel_healthcare_2019_2000m = df_geo[[3]]$motorized_travel_healthcare_2019_2000m,
pop_den_U5_FB_4000m = df_geo[[5]]$pop_den_U5_FB_4000m, pop_density_0m = df_geo[[1]]$pop_density_0m,
precipitation_monthly_0m = df_geo[[1]]$preci_monthly_0m,soil_wetness_0m = df_geo[[1]]$soil_wetness_0m,
temperature_monthly_0m = df_geo[[1]]$temp_survey_month_0m, dist_water_bodies_0m = df_geo[[1]]$dist_water_bodies_0m, EVI_0m = df_geo[[1]]$EVI_0m)
df_all <- left_join(dhs, df_sp, by =c('v001', 'dhs_year'))
#define variables to be used throughout analysis
positives = df_all$positives
dhs_year=df_all$dhs_year
num_tested =df_all$child_6_59_tested_malaria
region = df_all$region
interview_month = df_all$first_interview_month
edu_cat = cut(df_all$edu_a, breaks = c(0, 5, 10, 15, 100), include.lowest =TRUE)
p1 = igv.lm.point(dhs$num_child_6_59, dhs$child_6_59_tested_malaria,dhs$dhs_year,  "Survey year", 'Number of children 6 - 59 months', 'Number of children 6 - 59 months \n tested for malaria')
p1= p1 +geom_smooth(method=lm, color = "black")+ theme(legend.position = 'none')
dhs$num_child_6_59
dhs$child_6_59_tested_malaria
dhs$dhs_year
#figure 1
p1 = igv.lm.point(dhs$num_child_6_59, dhs$child_6_59_tested_malaria,dhs$dhs_year,  "Survey year", 'Number of children 6 - 59 months', 'Number of children 6 - 59 months \n tested for malaria')
View(igv.lm.point)
igv.lm.point <- function(df, x, y, point_val, legend_title, xlab, ylab){
plot <- ggplot(df, aes(x=x, y=y)) +
geom_point(aes(fill=as.factor(point_val)), alpha=0.7, shape=21, size = 10) +
scale_fill_igv()+
stat_cor(method = "pearson", col='darkred') +
theme_manuscript()+
guides(fill=guide_legend(title=legend_title, override.aes = list(size =5)))+
xlab(xlab)+
ylab(ylab)
}
#figure 1
p1 = igv.lm.point(dhs, dhs$num_child_6_59, dhs$child_6_59_tested_malaria,dhs$dhs_year,  "Survey year", 'Number of children 6 - 59 months', 'Number of children 6 - 59 months \n tested for malaria')
p1= p1 +geom_smooth(method=lm, color = "black")+ theme(legend.position = 'none')
p1
df_tested = data.frame(values = dhs$child_6_59_tested_malaria, category = 'tested')
df_positives = data.frame(values = dhs$positives, category = 'positives')
df_all = rbind(df_tested, df_positives)
p2 = hist_fun(df_all, df_all$values, df_all$category, 'Number of children 6 - 59 months', 'Count', c("Positive tests", "Tested"))
p2
#figure 2b
#examine the number of children tested
p3 = igv.lm.point(dhs, dhs$child_6_59_tested_malaria, dhs$positives, dhs$dhs_year, 'Survey year', 'Number of children 6 - 59 months \n tested for malaria', 'Number of positive tests' )
p3_ = p3 + geom_abline(slope=1, intercept=c(0,0), size = 0.9) +geom_smooth(method=lm, color = "black")
p3_
sf18 = st_read(file.path(DHSData, "Downloads", "NG_2018_DHS_11072019_1720_86355/NGGE7BFL/NGGE7BFL.shp"),)
sf15 = st_read(file.path(DHSData, "Downloads", "NG_2015_MIS_06192019/NGGE71FL/NGGE71FL.shp"),)
sf10 = st_read(file.path(DHSData, "Downloads", "NG_2010_MIS_06192019/NGGE61FL/NGGE61FL.shp"),)
sf_all = rbind(sf18, sf15, sf10) %>%filter(URBAN_RURA == "U") %>%  rename(v001 = DHSCLUST)
## ----------------------------------------------------------------
### Read in computed DHS cluster data and generate related figures - will bring this up later during code cleaning
## ----------------------------------------------------------------
dhs$positives_prop = round(dhs$positives/dhs$child_6_59_tested_malaria, 1)
summary(dhs$positives_prop)
dhs = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child)
map = sf_all %>% left_join(dhs, by=c('v001', 'DHSYEAR'))  %>%  filter(LATNUM != 0)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
df_count = map %>% dplyr::select(positives_cut) %>%  group_by(positives_cut) %>%  summarize(`Count` = n())
map$net_cut = cut(map$net_use, breaks=c(0,10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100), include.lowest = TRUE)
dhs = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child, positives_prop)
map = sf_all %>% left_join(dhs, by=c('v001', 'DHSYEAR'))  %>%  filter(LATNUM != 0)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
df_count = map %>% dplyr::select(positives_cut) %>%  group_by(positives_cut) %>%  summarize(`Count` = n())
map$net_cut = cut(map$net_use, breaks=c(0,10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100), include.lowest = TRUE)
#data wrangling
dhs = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child, positives_prop)
## ----------------------------------------------------------------
### Read in computed DHS cluster data and generate related figures - will bring this up later during code cleaning
## ----------------------------------------------------------------
dhs$positives_prop = round(dhs$positives/dhs$child_6_59_tested_malaria, 1)
#data wrangling
dhs = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child, positives_prop)
dhs
#data wrangling
map = sf_all %>% left_join(dhs, by=c('v001', 'DHSYEAR'))  %>%  filter(LATNUM != 0)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
df_count = map %>% dplyr::select(positives_cut) %>%  group_by(positives_cut) %>%  summarize(`Count` = n())
## ----------------------------------------------------------------
### Creating analysis data
## ----------------------------------------------------------------
#read in dhs file
dhs = read.csv(file.path(CsvDir, "all_DHS_variables_urban_malaria.csv"), header = T, sep = ',') %>% dplyr::select(-X)
dhs_ = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child)
map = sf_all %>% left_join(dhs_, by=c('v001', 'DHSYEAR'))  %>%  filter(LATNUM != 0)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
df_count = map %>% dplyr::select(positives_cut) %>%  group_by(positives_cut) %>%  summarize(`Count` = n())
map$net_cut = cut(map$net_use, breaks=c(0,10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100), include.lowest = TRUE)
map$positives_prop
## ----------------------------------------------------------------
### Read in computed DHS cluster data and generate related figures - will bring this up later during code cleaning
## ----------------------------------------------------------------
dhs$positives_prop = round(dhs$positives/dhs$child_6_59_tested_malaria, 1)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
dhs_ = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child)
map = sf_all %>% left_join(dhs_, by=c('v001', 'DHSYEAR'))  %>%  filter(LATNUM != 0)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
dhs_ = dhs %>%  dplyr::select(v001, positives, child_6_59_tested_malaria, DHSYEAR=dhs_year, net_use, net_use_child, positives_prop)
map = sf_all %>% left_join(dhs_, by=c('v001', 'DHSYEAR'))  %>%  filter(LATNUM != 0)
map$positives_cut = cut(map$positives_prop, breaks=c(0,0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.6, 0.8, 1), include.lowest = TRUE)
df_count = map %>% dplyr::select(positives_cut) %>%  group_by(positives_cut) %>%  summarize(`Count` = n())
map$net_cut = cut(map$net_use, breaks=c(0,10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100), include.lowest = TRUE)
stateshp = readOGR(file.path(DataDir, "shapefiles","gadm36_NGA_shp"), layer ="gadm36_NGA_1",use_iconv=TRUE, encoding= "UTF-8")
state_sf = st_as_sf(stateshp)
stateshp = readOGR(file.path(DataDir, "shapefiles","gadm36_NGA_shp"), layer ="gadm36_NGA_1",use_iconv=TRUE, encoding= "UTF-8")
state_sf = st_as_sf(stateshp)
map_big = gmap_fun(state_sf, map, labels=c(paste0('0 - 0.2',  ' (', df_count$Count[[1]], ')'),
paste0('0.3 - 0.4',  ' (', df_count$Count[[2]], ')'), paste0('0.5 - 0.6',  ' (', df_count$Count[[3]], ')'),
paste0('0.7 - 0.8',  ' (', df_count$Count[[4]], ')'), paste0('0.9 - 1.0',  ' (', df_count$Count[[5]], ')'),
'Missing data'),
map$positives_cut, 'Test positivity rate (overall count)')
state_sf
check=df[, NAME_1 =='Lagos']
check=df[, 'NAME_1' =='Lagos']
check=df[which(state_sf$NAME_1 =='Lagos')]
check=df[which(state_sf$NAME_1 =='Lagos'),]
check=state_sf[which(state_sf$NAME_1 =='Lagos'),]
View(check)
dhs_
map
check =map[which(map$ADM1NAME == 'LAGOS')]
check =map[which(map$ADM1NAME == 'LAGOS'),]
head(check)
sum(check$positives_prop == 0)
sum(check$positives_prop == 0, na.rm=T)
summary(check$positives_prop)
53/61
check =map[which(map$ADM1NAME == 'ANAMBRA'),]
sum(check$positives_prop == 0, na.rm=T)
25/39
check =map[which(map$ADM1NAME == 'RIVERS'),]
sum(check$positives_prop == 0, na.rm=T)
16/22
## ----------------------------------------------------------------
### Creating analysis data
## ----------------------------------------------------------------
#read in dhs file
dhs = read.csv(file.path(CsvDir, "all_DHS_variables_urban_malaria.csv"), header = T, sep = ',') %>% dplyr::select(-X)
dhs
check = dhs[which(dhs$dhs_year == 2015,)]
check = dhs[which(dhs$dhs_year == 2015),]
View(check)
summary(first_interview_month)
summary(check$first_interview_month)
check = dhs[which(dhs$dhs_year == 2018),]
summary(check$first_interview_month)
check = dhs[which(dhs$dhs_year == 2010),]
summary(check$first_interview_month)
dhs_hh <- read.files(DataDir, "*NGPR.*\\.DTA", 'NGPR7AFL|NGPR71FL|NGPR61FL', read_dta)  #reads in the PR files
rm(list=ls())
memory.limit(size = 50000)
## -----------------------------------------
### Paths
## -----------------------------------------
user <- Sys.getenv("USERNAME")
Drive <- file.path(gsub("[\\]", "/", gsub("Documents", "", Sys.getenv("HOME"))))
NuDir <- file.path(Drive, "Box", "NU-malaria-team")
ProjectDir <- file.path(NuDir, "data", 'nigeria_dhs' , 'data_analysis')
DataDir <- file.path(ProjectDir, 'data')
ResultDir =file.path(ProjectDir, "results", "research_plots")
GlobDir <- file.path(DataDir, 'africa_health_district_climate', 'climate', 'global')
DHSData <- file.path(DataDir, 'DHS')
RastDir <- file.path(DataDir, "Raster_files")
DataIn <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'DHS_survey_extract')
GeoDir <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'geospatial_covariates')
# -----------------------------------------
### Required functions and settings
## -----------------------------------------
source("00_data_extraction/data_extractor_functions/data_extractor_functions.R")
options(survey.lonely.psu="adjust") # this option allows admin units with only one cluster to be analyzed
dhs_hh <- read.files(DataDir, "*NGPR.*\\.DTA", 'NGPR7AFL|NGPR71FL|NGPR61FL', read_dta)  #reads in the PR files
dhs_hh <- dhs_hh %>% map(~filter(., hv025 == 1)) %>%  map(~dplyr::select(., hv001, hv006, hv007)) %>%  map(~distinct(.,))
View(dhs_hh)
summary(dhs_hh[[2]]$hv006)
rm(list=ls())
memory.limit(size = 50000)
## -----------------------------------------
### Paths
## -----------------------------------------
user <- Sys.getenv("USERNAME")
Drive <- file.path(gsub("[\\]", "/", gsub("Documents", "", Sys.getenv("HOME"))))
NuDir <- file.path(Drive, "Box", "NU-malaria-team")
ProjectDir <- file.path(NuDir, "data", 'nigeria_dhs' , 'data_analysis')
DataDir <- file.path(ProjectDir, 'data')
ResultDir =file.path(ProjectDir, "results", "research_plots")
GlobDir <- file.path(DataDir, 'africa_health_district_climate', 'climate', 'global')
DHSData <- file.path(DataDir, 'DHS')
RastDir <- file.path(DataDir, "Raster_files")
DataIn <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'DHS_survey_extract')
GeoDir <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'geospatial_covariates')
# -----------------------------------------
### Required functions and settings
## -----------------------------------------
source("00_data_extraction/data_extractor_functions/data_extractor_functions.R")
options(survey.lonely.psu="adjust") # this option allows admin units with only one cluster to be analyzed
## ----------------------------------------------------
### Read in PR  data (DHS 2010, 2015, 2018)
## ----------------------------------------------------
dhs <- read.files(DataDir, "*NGPR.*\\.DTA", 'NGPR7AFL|NGPR71FL|NGPR61FL', read_dta)  #reads in the PR files
## -----------------------------------------
### Data processing
## -----------------------------------------
#create a variables for wealth and housing quality, sex, net use, survey design and educational attainment  for all years
dhs<- dhs %>% map(~mutate(., wealth = ifelse(hv270 <4, 0, 1),
floor_type = ifelse(hv213 >= 98, NA, ifelse(hv213 %in% c(30, 31, 33, 34, 35),1, 0)),
wall_type = ifelse(hv214 >= 98, NA , ifelse (hv214 %in% c(30, 31, 33, 34,35),1, 0)),
roof_type = ifelse(hv215 >= 98, NA, ifelse(hv215 %in% c(31),1, 0)),
housing_q = ifelse(floor_type == 1 & wall_type == 1 & roof_type == 1,1, 0),
all_female_sex = ifelse(hc27 == 1,0, 1),
female_child_sex = all_female_sex,
net_use = ifelse(hml12 %in% c(1,2), 1,0),
wt=hv005/1000000,strat=hv022,
id=hv021, num_p=1,
edu_a = ifelse(hv106 %in% c(0, 1, 2), 0,ifelse(hv106 >= 8, NA, ifelse(hv106 == 2|3, 1, NA))),
age = ifelse(hv105 >= 98, NA, hv105),
median_age = age,
mean_age =age,
household_size = hv013,
p_test = ifelse(hml32 > 1, NA, hml32),
U5_pop = ifelse(hc1 %in% c(0:59), 1, 0),
region = hv024, interview_month = hv006,
visitors = hv102)) %>%
map(~filter(., hv025 == 1)) %>% #filtering to urban areas only
map(~dplyr::select(., -c(hv013, hv105, hv106, hv021, hv005, hv022, hml12, hc27, hv215, hv214, hv213, hv270, hv024, hv006)))
dhs[[1]]$preg_women <- ifelse(dhs[[1]]$sh09 >= 8 , NA, ifelse(dhs[[1]]$sh09 == 1, 1, 0))
dhs[[2]]$preg_women <- ifelse(dhs[[2]]$sh09 >= 8, NA, ifelse(dhs[[2]]$sh09 == 1, 1, 0))
dhs[[3]]$preg_women <- ifelse(dhs[[3]]$ha54 >= 8, NA, ifelse(dhs[[3]]$ha54 == 1, 1, 0))
# create PR dataset by filtering for microscopy (denominator -hh selected for hemoglobin, child slept there last night and have result for test and urban area(hv025). PR is for children 6 - 59 months)
pfpr_df <- dhs %>% map(~filter(., hv042 == 1 & hv103 == 1 & hc1 %in% c(6:59))) #& hml16 <59 & hml32 %in% c(0, 1,6)
# create PR dataset by filtering for microscopy (denominator -hh selected for hemoglobin, child slept there last night and have result for test and urban area(hv025). PR is for children 6 - 59 months)
pfpr_df <- dhs %>% map(~filter(., hv042 == 1 & hv103 == 1 & hc1 %in% c(6:59) & hml32 %in% c(0, 1,6))) #& hml16 <59 & hml32 %in% c(0, 1,6)
df <- pfpr_df %>% map(~dplyr::select(., hv001, hml32)) %>%  map(~filter(., hml32 == 1)) %>%  map(~dplyr::group_by_(., 'hv001')) %>%  map(~summarise(.,positives = n())) %>%
plyr::ldply()  %>%mutate(year = str_split(.id, '_', simplify = TRUE)[,4])
View(df)
vars='interview_month'
df <- dhs %>%  map(~dplyr::select(., c(hv001, vars[1])))
df <- plyr:: ldply(df)
View(df)
rm(list=ls())
#memory.limit(size = 50000)
## -----------------------------------------
### Paths
## -----------------------------------------
Drive <- file.path(gsub("[\\]", "/", gsub("Documents", "", Sys.getenv("HOME"))))
NuDir <- file.path(Drive, "Box", "NU-malaria-team")
NGDir <-file.path(NuDir, "data", "nigeria_dhs",  "data_analysis")
DataDir <-file.path(NGDir, "data")
ResultDir <-file.path(NGDir, "results")
DHSData <- file.path(DataDir, 'DHS')
DataIn <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates')
ifelse(!dir.exists(file.path(DataIn, "cleaned_cluster_covariates_all")),
dir.create(file.path(DataIn, "cleaned_cluster_covariates_all")), FALSE)
cleandatDir <- file.path(DataIn, 'cleaned_cluster_covariates_all')
files <- list.files(path = file.path(DataIn, 'DHS_survey_extract') , pattern = '.csv', full.names = TRUE, recursive = TRUE)
files<- files[-grep('_0m_|_1000m_|_3000m_|_4000m_|Temp_covereates|DHS_18.csv|pop_density_|p_test_lagos_|pop_density_2000m_buffer_DHS_10_15_18.csv|pop_density_2km_buffer_DHS_10_15_18_30sec|building_density|elevation_|interview_month', files)]
df <-sapply(files, read.csv, simplify = F)
df <- df %>% map_if(~ all(c('X') %in% colnames(.x)),~dplyr::select(., -X)) %>%
map_if(~ all(c('se') %in% colnames(.x)),~dplyr::select(., -se)) %>%
map_if(~ all(c('ci_l') %in% colnames(.x)),~dplyr::select(., -ci_l)) %>%
map_if(~ all(c('ci_u') %in% colnames(.x)),~dplyr::select(., -ci_u)) %>%
map_if(~ all(c('ID') %in% colnames(.x)), ~rename(., v001 = ID)) %>%
map_if(~ all(c('hv001') %in% colnames(.x)), ~rename(., v001 = hv001))
df <- df %>%  map(~mutate(., dhs_year = str_split(.id, "_", simplify = T)[, 4]) ) %>%  map(~dplyr::select(., -.id))
df<- df[order(sapply(df,nrow),decreasing = T)]
df <- df %>%  purrr::reduce(left_join, by = c('dhs_year', 'v001'))
View(df)
df
files <- list.files(path = file.path(DataIn, 'DHS_survey_extract') , pattern = '.csv', full.names = TRUE, recursive = TRUE)
files<- files[-grep('_0m_|_1000m_|_3000m_|_4000m_|Temp_covereates|DHS_18.csv|pop_density_|p_test_lagos_|pop_density_2000m_buffer_DHS_10_15_18.csv|pop_density_2km_buffer_DHS_10_15_18_30sec|building_density|elevation_|interview_month|p_test_PfPR_urban_state_DHS_10_15_18|edu_a_all_state_DHS_PR_10_15_18', files)]
df <-sapply(files, read.csv, simplify = F)
df <- df %>% map_if(~ all(c('X') %in% colnames(.x)),~dplyr::select(., -X)) %>%
map_if(~ all(c('se') %in% colnames(.x)),~dplyr::select(., -se)) %>%
map_if(~ all(c('ci_l') %in% colnames(.x)),~dplyr::select(., -ci_l)) %>%
map_if(~ all(c('ci_u') %in% colnames(.x)),~dplyr::select(., -ci_u)) %>%
map_if(~ all(c('ID') %in% colnames(.x)), ~rename(., v001 = ID)) %>%
map_if(~ all(c('hv001') %in% colnames(.x)), ~rename(., v001 = hv001))
df <- df %>%  map(~mutate(., dhs_year = str_split(.id, "_", simplify = T)[, 4]) ) %>%  map(~dplyr::select(., -.id))
df<- df[order(sapply(df,nrow),decreasing = T)]
df <- df %>%  purrr::reduce(left_join, by = c('dhs_year', 'v001'))
View(df)
files <- list.files(path = file.path(DataIn, 'DHS_survey_extract') , pattern = '.csv', full.names = TRUE, recursive = TRUE)
files<- files[grep('interview_month', files)]
df_interview_month <-sapply(files, read.csv, simplify = F)
df_interview_month <- df_interview_month %>% map_if(~ all(c('X') %in% colnames(.x)),~dplyr::select(., -X)) %>%
map_if(~ all(c('se') %in% colnames(.x)),~dplyr::select(., -se)) %>%
map_if(~ all(c('ci_l') %in% colnames(.x)),~dplyr::select(., -ci_l)) %>%
map_if(~ all(c('ci_u') %in% colnames(.x)),~dplyr::select(., -ci_u)) %>%
map_if(~ all(c('ID') %in% colnames(.x)), ~rename(., v001 = ID)) %>%
map_if(~ all(c('hv001') %in% colnames(.x)), ~rename(., v001 = hv001))
df_interview_month <- df_interview_month %>%  map(~mutate(., dhs_year = str_split(.id, "_", simplify = T)[, 4]) ) %>%  map(~dplyr::select(., -.id))
df_interview_month
df_im <- df_interview_month[[1]] %>%  group_by(v001, dhs_year) %>%  mutate(first_interview_month= dplyr::first(interview_month)) %>%  dplyr::select(-c(interview_month)) %>%  distinct()
View(df_im)
check=df_im[which(df_im$dhs_year ='2015')]
check=df_im[which(df_im$dhs_year =='2015')]
check=df_im[which(df_im$dhs_year ==2015)]
check=df_im[which(df_im$dhs_year ==2015),]
summary(check$dhs_year)
summary(check$first_interview_month)
df <- df %>%  left_join(df_im, by = c('dhs_year', 'v001'))
write.csv(df, paste0(cleandatDir, '/New_082321/all_DHS_variables_urban_malaria.csv'))
trend_data= dhs
trend_data$month_year = paste0(trend_data$first_interview_month, "_", trend_data$dhs_year)
table(trend_data$month_year)
rm(list=ls())
#memory.limit(size = 50000)
# ----------------------------------------------------
### Directories
# ----------------------------------------------------
user = Sys.getenv("USERNAME")
Drive = file.path(gsub("[\\]", "/", gsub("Documents", "", Sys.getenv("HOME"))))
NuDir = file.path(Drive, "Box", "NU-malaria-team")
ProjectDir = file.path(NuDir, 'data', 'nigeria_dhs' , 'data_analysis')
DataDir = file.path(ProjectDir, "data")
DHSData = file.path(DataDir, 'DHS')
DataIn = file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'DHS_survey_extract')
ResultDir =file.path(ProjectDir, "results", "research_plots")
HisDir =file.path(ResultDir, "histograms")
MapsDir = file.path(ResultDir, "maps")
GeoDir <- file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'geospatial_covariates')
CsvDir = file.path(DHSData, "Computed_cluster_information", 'urban_malaria_covariates', 'cleaned_cluster_covariates_all', 'New_082321')
# ----------------------------------------------------
### Required functions and settings
## ----------------------------------------------------
source("./other_functions/descriptive_analysis_functions.R")
## ----------------------------------------------------------------
### Creating analysis data
## ----------------------------------------------------------------
#read in dhs file
dhs = read.csv(file.path(CsvDir, "all_DHS_variables_urban_malaria.csv"), header = T, sep = ',') %>% dplyr::select(-X)
trend_data= dhs
trend_data$month_year = paste0(trend_data$first_interview_month, "_", trend_data$dhs_year)
table(trend_data$month_year)
trend_data_10 = trend_data[trend_data$first_interview_month ==10,]
p_all_10 = gdensity_fun(trend_data_10, trend_data_10$positives_prop, trend_data_10$dhs_year, "Survey year",
'Test positivity rate for clusters sampled in october', 'Density')
trend_data_11 = trend_data[trend_data$first_interview_month ==11,]
p_all_11 = gdensity_fun(trend_data_11, trend_data_11$positives_prop, trend_data_11$dhs_year, "Survey year",
'Test positivity rate for clusters sampled in November', 'Density')
trend_data_12 = trend_data[trend_data$first_interview_month ==12,]
p_all_12 = gdensity_fun(trend_data_12, trend_data_12$positives_prop, trend_data_12$dhs_year, "Survey year",
'Test positivity rate for clusters sampled in November', 'Density')
p_all_10
View(gdensity_fun)
dhs = read.csv(file.path(CsvDir, "all_DHS_variables_urban_malaria.csv"), header = T, sep = ',') %>% dplyr::select(-X)
dhs$positives_prop = round(dhs$positives/dhs$child_6_59_tested_malaria, 1)
trend_data= dhs
trend_data$month_year = paste0(trend_data$first_interview_month, "_", trend_data$dhs_year)
table(trend_data$month_year)
trend_data_10 = trend_data[trend_data$first_interview_month ==10,]
p_all_10 = gdensity_fun(trend_data_10, trend_data_10$positives_prop, trend_data_10$dhs_year, "Survey year",
'Test positivity rate for clusters sampled in october', 'Density')
p_all_10
trend_data_11 = trend_data[trend_data$first_interview_month ==11,]
p_all_11 = gdensity_fun(trend_data_11, trend_data_11$positives_prop, trend_data_11$dhs_year, "Survey year",
'Test positivity rate for clusters sampled in November', 'Density')
p_all_11
trend_data_12 = trend_data[trend_data$first_interview_month ==12,]
p_all_12 = gdensity_fun(trend_data_12, trend_data_12$positives_prop, trend_data_12$dhs_year, "Survey year",
'Test positivity rate for clusters sampled in November', 'Density')
p_all_12
all_plots = p_all_10 / p_all_11 / p_all_12 +  plot_annotation(tag_levels = 'A') & theme(plot.tag = element_text(face = 'bold', size = 16))
ggsave(paste0(ResultDir, '/updated_figures/', Sys.Date(), '_Figure_3_malaria_tests_positivity_trends.pdf'), all_plots, width = 13, height = 9)
